{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/taskApp/task.component.ts","webpack:///src/app/components/taskApp/task.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","taskComponent","updateactive","listOftasks","newtaskForm","name","complited","numberoftasks","length","changeStatusComplitedtask","index","numberofcomplitedtaskfun","localStorage","setItem","JSON","stringify","fire","addtask","push","updatetask","indexActive","updateitem","splice","removetask","numberoftaskcomplited","i","item","parse","getItem","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { taskComponent } from './components/taskApp/task.component';\n\n\nconst routes: Routes = [\n  { path : \"task\" , component : taskComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'testeApp';\n}\n","<router-outlet></router-outlet>","import { taskComponent } from './components/taskApp/task.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    taskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { task } from '../../interfaces/task.interface';\nimport { Component, OnInit } from '@angular/core';\nimport swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-walid',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class taskComponent implements OnInit {\n\n  updateactive : boolean = false;\n\n  listOftasks : task[] = [];\n\n  newtaskForm  : task = {\n    name : \"\" ,\n    complited : false\n  }\n\n  numberoftasks : number = this.listOftasks.length;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.listOftasks = [...JSON.parse(localStorage.getItem(\"listTasks\"))];\n    this.numberoftasks = this.listOftasks.length;\n    this.numberofcomplitedtaskfun();\n  }\n\n  changeStatusComplitedtask = (index) => {\n    this.listOftasks[index].complited = !this.listOftasks[index].complited;\n    this.numberofcomplitedtaskfun();\n    localStorage.setItem(\"listTasks\" , JSON.stringify(this.listOftasks));\n    swal.fire('gÃ©nial' , 'task complited' , 'success');\n  }\n\n  addtask = () => {\n    this.listOftasks.push(this.newtaskForm);\n    this.newtaskForm = {\n      name : \"\" ,\n      complited : false\n    }\n    this.numberoftasks = this.listOftasks.length;\n    swal.fire('good' , 'task bien ajouter' , 'success');\n    localStorage.setItem(\"listTasks\" , JSON.stringify(this.listOftasks));\n  }\n\n  indexActive : number;\n\n  updatetask = (index) => {\n    this.indexActive = index;\n    this.updateactive = true;\n    this.newtaskForm = this.listOftasks[index];\n    localStorage.setItem(\"listTasks\" , JSON.stringify(this.listOftasks));\n  }\n\n  updateitem = () => {\n    this.listOftasks.splice(this.indexActive , 1 , this.newtaskForm);\n    this.indexActive = null;\n    this.updateactive = false;\n    this.newtaskForm = {\n      name : \"\" ,\n      complited : false\n    }\n    swal.fire('good work' , 'task bien editer' , 'info');\n    localStorage.setItem(\"listTasks\" , JSON.stringify(this.listOftasks));\n  }\n\n  removetask = (index) => {\n    this.listOftasks.splice(index , 1);\n    swal.fire('Nice!' , 'task bien supprimer' , 'error');\n    this.numberoftasks = this.listOftasks.length;\n    localStorage.setItem(\"listTasks\" , JSON.stringify(this.listOftasks));\n    this.numberofcomplitedtaskfun();\n  }\n\n\n  numberoftaskcomplited : number = 0;\n\n  numberofcomplitedtaskfun = () => {\n    this.numberoftaskcomplited = 0;\n    for(let i = 0 ; i < this.listOftasks.length ; i++){\n      let item = this.listOftasks[i].complited;\n      if(item) this.numberoftaskcomplited += 1;\n    }\n  }\n\n}\n","<h2 class=\"w-100 bg-primary py-3 text-center text-light shadow mb-5\"> app todo list </h2>\n\n\n<div class=\"main shadow rounded-lg p-5\">\n    <div class=\"form-group d-flex\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"add task...\" ngModel [(ngModel)]=\"newtaskForm.name\"> \n        <button class=\"btn btn-primary\"  [hidden]=\"updateactive\" (click)=\"addtask()\" [disabled]=\"newtaskForm.name.length === 0\"><i class=\"fas fa-plus\"></i></button>\n        <button class=\"btn btn-danger\" [hidden]=\"!updateactive\" (click)=\"updateitem()\"><i class=\"fas fa-edit\"></i></button>\n    </div>\n\n    <hr>\n\n    <div class=\"tasks\">\n        <div class=\"task d-flex bg-light py-3 px-4 rounded-lg shadow my-2\" (dblclick)=\"removetask(i)\" *ngFor=\"let task of listOftasks ; index as i\">\n            <div class=\"completed\"><div class=\"shadow\" (click)=\"changeStatusComplitedtask(i)\"><i class=\"fas\" [ngClass]=\"{'fa-check' : task.complited , 'fa-times' : !task.complited  }\"></i></div></div>\n            <div class=\"name text-center\"> {{ task.name }} </div>\n            <div class=\"edit\"><div class=\"shadow\" (click)=\"updatetask(i)\"><i class=\"fas fa-edit\"></i></div></div>\n            <div class=\"delete\"><div class=\"shadow\" (click)=\"removetask(i)\"><i class=\"fas fa-trash-alt\"></i></div></div>\n        </div>\n    </div>\n\n</div>\n\n<div class=\"state py-3 text-center bg-primary shadow rounded-lg d-flex text-light\" *ngIf=\"listOftasks.length != 0\">\n    <div class=\"numbertasks\"> <strong> active task :  </strong>  {{ numberoftasks }} </div>\n    <div class=\"numberComplitedtasks\"> <strong> task complited :  </strong> {{ numberoftaskcomplited }} of {{ numberoftasks }} </div>\n</div>\n\n\n<div class=\"state py-3 text-center bg-danger shadow rounded-lg text-light\" *ngIf=\"listOftasks.length == 0\">\n    no task to show\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}